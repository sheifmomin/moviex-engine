{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/home-page/search-bar/search-bar.component.ts","./src/app/components/home-page/search-bar/search-bar.component.html","./src/app/components/home-page/search-filter/search-filter.component.ts","./src/app/components/home-page/search-filter/search-filter.component.html","./src/app/components/home-page/search-results/search-results.component.ts","./src/app/components/home-page/search-results/search-results.component.html","./src/app/services/genre.service.ts","./src/app/services/search-query.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movies-app';\n}\n","<app-home-page></app-home-page>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { SearchBarComponent } from './components/home-page/search-bar/search-bar.component';\nimport { SearchResultsComponent } from './components/home-page/search-results/search-results.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SearchFilterComponent } from './components/home-page/search-filter/search-filter.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    SearchBarComponent,\n    SearchResultsComponent,\n    SearchFilterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent {\n\n  public searchQuery: any;\n  public filterSelected: Boolean;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n  public updateSearchQuery(params) {\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <app-search-filter></app-search-filter>\n  </mat-sidenav>\n(click)=\"drawer.toggle()\" \n\n  <mat-sidenav-content class=\"results-container\">\n    <mat-toolbar class=\"search-nav\" color=\"primary\">\n      <button class=\"side-nav-icon\" type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <app-search-bar class=\"search-bar-cp\" (filterSelected)=\"filterSelected = $event\"\n        (searchQuery)=\"searchQuery = $event\"></app-search-bar>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <app-search-results [searchQuery]=\"searchQuery\"></app-search-results>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SearchQueryService } from '../../../services/search-query.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n\n  public shows: any;\n  @Output() public searchQuery = new EventEmitter();\n  @Output() public filterSelected = new EventEmitter();\n  myControl = new FormControl();\n  options: string[] = [];\n  filter = false;\n  constructor(private searchQueryService: SearchQueryService) { }\n\n  ngOnInit(): void { }\n\n  public submit(event) {\n    this.searchQuery.emit(event.target.value);\n  }\n\n  public selectFromDropDown(searchParams) {\n    this.searchQuery.emit(searchParams);\n  }\n\n  public filterClick() {\n    this.filter = !this.filter;\n    this.filterSelected.emit(this.filter);\n  }\n\n  public onKeyPressSearch(event) {\n    const searchQuery = event.target.value;\n    this.options = [];\n    if (searchQuery !== '') {\n      if (searchQuery) {\n        this.shows = [];\n        const showType = 'mutiple';\n        const searchShow = searchQuery;\n        this.searchQueryService.getShowsSearchQuery(showType, searchShow).subscribe(value => {\n          this.shows = Object.keys(value).map(key => value[key])[0].results;\n        });\n      }\n    }\n  }\n}\n","<div class=\"navbar\">\n\t<div class=\"search\">\n\t\t<mat-form-field class=\"example-full-width\">\n\t\t\t<mat-label>Search for Movies, TV Shows</mat-label>\n\t\t\t<input matInput class=\"main-search\" name=\"search\" (keypress)=\"submit($event)\" \n\t\t\tautocomplete=\"off\" placeholder=\"Ex. Avengers...\" ngModel>\n\t\t</mat-form-field>\n\t</div>\n\t<div class=\"filter\" (click)=\"filterClick()\">\n\t\t<span class=\"material-icons\">\n\t\t\ttune\n\t\t</span>\n\t</div>\n</div>\n\n\n<!-- <form #userForm=\"ngForm\" (ngSubmit)=\"submit(userForm.value)\" novalidate>\n\t<div class=\"search\">\n\t\t<div class=\"query\">\n\t\t\t<mat-form-field class=\"example-full-width\">\n\t\t\t\t<input matInput class=\"main-search\" name=\"search\"\n\t\t\t\t\t(keypress)=\"onKeyPressSearch($event)\" [matAutocomplete]=\"auto\" \n\t\t\t\t\tautocomplete=\"off\" placeholder=\"Ex. Avengers...\" ngModel>\n\t\t\t\t<mat-autocomplete #auto=\"matAutocomplete\">\n\t\t\t\t  <mat-option *ngFor=\"let list of shows\">\n\t\t\t\t\t<span *ngIf=\"list.original_title\"\n\t\t\t\t\t\t(click)=\"submit(list.original_title)\">{{list.original_title}}</span>\n\t\t\t\t\t<span *ngIf=\"!list.original_title && list.title\"\n\t\t\t\t\t\t(click)=\"submit(list.title)\">{{list.title}}</span>\n\t\t\t\t\t<span *ngIf=\"!list.original_title && !list.title && list.name\"\n\t\t\t\t\t\t(click)=\"submit(list.name)\">{{list.name}}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span *ngIf=\"!list.original_title && !list.title && !list.name && list.original_name\"\n\t\t\t\t\t\t(click)=\"submit(list.original_name)\">\n\t\t\t\t\t\t{{list.original_name}}\n\t\t\t\t\t</span>\n\t\t\t\t  </mat-option>\n\t\t\t\t</mat-autocomplete>\n\t\t\t  </mat-form-field>\n\t\t</div>\n\t\t\n\t\t<div class=\"submit\">\n\t\t\t<button class=\"submit-button\" color=\"primary\" type=\"submit\">\n\t\t\t\t<span class=\"submit-text\">Search</span>\n\t\t\t\t<span class=\"submit-icon material-icons\">\n\t\t\t\tsearch\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</form> -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { GenreService } from '../../../services/genre.service';\n\n@Component({\n  selector: 'app-search-filter',\n  templateUrl: './search-filter.component.html',\n  styleUrls: ['./search-filter.component.scss']\n})\nexport class SearchFilterComponent implements OnInit {\n\n  toppings = new FormControl();\n  toppingList: string[] = ['Crime', 'Thriller', 'Sci-Fi', 'Mystery', 'Drama', 'Horror'];\n\n  constructor(private genreService: GenreService) { }\n\n  ngOnInit(): void {\n    this.genreService.getAllGenre().subscribe(value => {\n      Object.keys(value).map(key => {\n        const combined = value[key][0].genres.concat(value[key][1].genres);\n        const genreMap = new Map();\n        combined.forEach(element => {\n          genreMap.set(element.id, element.name);\n        });\n        genreMap.forEach(element => {\n          this.toppingList.push(element);\n        });\n      });\n    });\n  }\n}\n","<div class=\"filter-heading\"> Apply Filters:</div><hr>\n<div class=\"search-filter\">\n\t<div class=\"container\">\n\t\t<div class=\"filter\"> Type:</div>\n\t\t<div class=\"type\">\n\t\t\t<mat-radio-group name=\"showtype\" aria-label=\"Select an option\" ngModel>\n\t\t\t\t<mat-radio-button class=\"type-option\" value=\"tvshow\">Shows</mat-radio-button>\n\t\t\t\t<div class=\"sub-type\">\n\t\t\t\t\t<div><mat-checkbox>Movies</mat-checkbox></div>\n\t\t\t\t\t<div><mat-checkbox>TV Shows</mat-checkbox></div>\n\t\t\t\t</div>\n\t\t\t\t<mat-radio-button class=\"type-option\" value=\"multi\">Actors</mat-radio-button>\n\t\t\t</mat-radio-group>\n\t\t</div>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"filter\"> Genre:</div>\n\t\t<mat-form-field class=\"genre-type\">\n\t\t<mat-label>Genere</mat-label>\n\t\t<mat-select [formControl]=\"toppings\" multiple>\n\t\t\t<mat-select-trigger>\n\t\t\t{{toppings.value ? toppings.value[0] : ''}}\n\t\t\t<span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n\t\t\t\t(+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n\t\t\t</span>\n\t\t\t</mat-select-trigger>\n\t\t\t<mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n\t\t</mat-select>\n\t\t</mat-form-field>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"filter\"> Minimum Rating:</div>\n\t\t<mat-slider thumbLabel\n\t\ttickInterval=\"1\"\n\t\tmin=\"1\"\n\t\tmax=\"10\"></mat-slider>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"filter\"> Release Year (Range):</div>\n\t\t<div class=\"date-range\">\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Start date</mat-label>\n\t\t\t\t<input matInput [matDatepicker]=\"picker\" autocomplete=\"off\">\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>End date (optional)</mat-label>\n\t\t\t\t<input matInput [matDatepicker]=\"picker\" autocomplete=\"off\">\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t</div>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"filter\"> Show Language:</div>\n\t\t<mat-form-field class=\"genre-type\">\n\t\t<mat-label> Select Language</mat-label>\n\t\t<mat-select [formControl]=\"toppings\" multiple>\n\t\t\t<mat-select-trigger>\n\t\t\t{{toppings.value ? toppings.value[0] : ''}}\n\t\t\t<span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n\t\t\t\t(+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n\t\t\t</span>\n\t\t\t</mat-select-trigger>\n\t\t\t<mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n\t\t</mat-select>\n\t\t</mat-form-field>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"filter adult-content\">\n\t\t\t<div class=\"adult-title\"> Include Adult Content: </div>\n\t\t\t<div class=\"adult-toggle\"><mat-slide-toggle></mat-slide-toggle></div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { SearchQueryService } from '../../../services/search-query.service';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.scss']\n})\nexport class SearchResultsComponent implements OnInit, OnChanges {\n\n  @Input() public searchQuery: any;\n  public shows = [];\n  constructor(private searchQueryService: SearchQueryService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    if (this.searchQuery) {\n      this.shows = [];\n      let showType = 'mutiple';\n      if (showType === '') { showType = 'mutiple'; }\n      const searchShow = this.searchQuery;\n      this.searchQueryService.getShowsSearchQuery(showType, searchShow).subscribe(value => {\n        this.shows = Object.keys(value).map(key => value[key])[0].results;\n      });\n    }\n  }\n}\n\n","<div class=\"grid-container grid-container-fill\">\n\t<div class=\"grid-element\" *ngFor=\"let list of shows\">\n\t\t\t<img mat-card-image *ngIf=\"list.poster_path\" [src]=\"'http://image.tmdb.org/t/p/w185' + list.poster_path\"\n\t\t\t\tclass=\"image-card\" alt=\"Photo of a Shiba Inu\">\n\t\t\t<img mat-card-image *ngIf=\"!list.poster_path && list.backdrop_path\"\n\t\t\t\t[src]=\"'http://image.tmdb.org/t/p/w185' + list.poster_path\" class=\"image-card\"\n\t\t\t\talt=\"Photo of a Shiba Inu\">\n\t\t\t<img mat-card-image *ngIf=\"!list.poster_path && !list.backdrop_path\"\n\t\t\t\tsrc=\"https://images-na.ssl-images-amazon.com/images/I/41nOFqNOlOL._SX466_.jpg\" class=\"image-card\"\n\t\t\t\talt=\"Photo of a Shiba Inu\">\n\t\t\t\n\t</div>\n</div>\n\n<!-- <mat-card-header>\n\t<mat-card-title *ngIf=\"list.original_title\">{{list.original_title}}</mat-card-title>\n\t<mat-card-title *ngIf=\"!list.original_title && list.title\">{{list.title}}</mat-card-title>\n\t<mat-card-title *ngIf=\"!list.original_title && !list.title && list.name\">{{list.name}}\n\t</mat-card-title>\n\t<mat-card-title *ngIf=\"!list.original_title && !list.title && !list.name && list.original_name\">\n\t\t{{list.original_name}}\n\t</mat-card-title>\n\t<mat-card-subtitle *ngIf=\"list.release_date\">{{list.release_date}}</mat-card-subtitle>\n\t<mat-card-subtitle *ngIf=\"list.first_air_date\">{{list.first_air_date}}</mat-card-subtitle>\n</mat-card-header> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenreService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllGenre() {\n    return this.http.get(`http://localhost:3000/genre`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchQueryService {\n\n  constructor(private http: HttpClient) { }\n\n  public getShowsSearchQuery(showType: string, searchShow: string) {\n    return this.http.get(`http://localhost:3000/general/${showType}`, {\n      params: {\n        searchQuery: searchShow\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}